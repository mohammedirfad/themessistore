function essentialCountdownCloseAnnouncementBar(e, t) {
  let n = document.querySelector(`.countdown_annoucement_bar_wrapper_${e}`);
  if (n) {
    n.parentNode.removeChild(n);
    try {
      window.localStorage.setItem(
        'countdownTimerAnnoucementBarClosed',
        JSON.stringify({ value: !0, id: e, updatedAt: t })
      );
    } catch (o) {
      console.log(o);
    }
  }
}
function essentialCountdownCloseAnnouncementBarOnClick(e, t) {
  !e.target.closest('button') && t && (window.location.href = t);
}
async function getCartEssentialApps() {
  let e = await fetch(window.Shopify.routes.root + 'cart.js', {
    headers: { 'Content-Type': 'application/json' },
  })
    .then((e) => e.json())
    .then((e) => e)
    .catch((e) => {
      console.error('Error:', e);
    });
  return e;
}
function clearCartEssentialApps(e) {
  fetch(window.Shopify.routes.root + 'cart/clear.js', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
  })
    .then(() => {
      try {
        window.localStorage.removeItem(`essentialCountdownTimer-${e.id}`);
      } catch (t) {
        console.log(t);
      }
      let n = window.location && window.location.pathname.includes('/cart');
      n && location.reload();
    })
    .catch((e) => {
      console.error('Error:', e);
    });
}
async function getProductEssentialApps() {
  let e = await fetch(window.location.pathname + '.js', {
    headers: { 'Content-Type': 'application/json' },
  })
    .then((e) => e.json())
    .then((e) => e)
    .catch((e) => {
      console.error('Error:', e);
    });
  return e;
}
!(function () {
  function e(e) {
    let t = document.getElementsByTagName('head')[0],
      n = document.createElement('style');
    n.setAttribute('type', 'text/css'),
      n.setAttribute('id', 'countdown_timer'),
      n.styleSheet
        ? (n.styleSheet.cssText = e)
        : n.appendChild(document.createTextNode(e)),
      t.appendChild(n);
  }
  function t() {
    if (window.essentialViewCounted) return;
    window.essentialViewCounted = !0;
    let e = window.Shopify ? window.Shopify.shop : window.location.origin,
      t = document.querySelectorAll('.essential_countdown_timer'),
      n = t && t.length > 0 ? t.length : 0;
    e &&
      0 !== n &&
      fetch('https://essential-apps-analytics.herokuapp.com/post_event', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ shop: e, views: n }),
      });
  }
  function n(e) {
    return '' !== e.font && e.font
      ? `font-family: ${e.font};
`
      : '';
  }
  function o(e, t) {
    let o = e.style;
    return `
      .countdown_wrapper_${e.id} {
          display: grid;
          grid-template-columns: 1fr 10px 1fr 10px 1fr 10px 1fr;
          ${'top-bar' === t ? 'row-gap: 0;' : 'row-gap: 6px;'}  
          justify-items: center;
          align-items: center;
          column-gap: 5px;
          direction: ltr;
          ${
            'top-bar' === t ? 'column-gap: 2px;' : 'padding-top: 4px;'
          }          
      }

      .countdown_time_${e.id} {
          ${n(o)}color: ${o.timerColor};
          font-weight: bold;
          font-size: ${o.timerSize}px;
          line-height: 1;
          font-feature-settings: 'tnum';
          font-variant-numeric: tabular-nums;
          ${'top-bar' !== t && 'padding-top: 4px;'}       
      }

      .countdown_legend_${e.id} {
          ${n(o)}color: ${o.legendColor};
          font-size: ${o.legendSize}px;
          padding-right: 10px;
          grid-column: 2 span;
          line-height: 1;
      }

      .countdown_legend_${e.id}.last {
        grid-column: auto;
        padding-right: 0;
      }`;
  }
  function r(t) {
    let r = t.style,
      i =
        'gradientBackground' === r.backgroundType
          ? `linear-gradient(${r.gradientTurn}deg, ${r.gradientStart}, ${r.gradientEnd})`
          : r.singleColor,
      a = `
        .countdown_timer_wrapper_${t.id} {
            display: flex;
            flex-flow: column;
            ${n(r)}background: ${i};
            ${
              void 0 !== r.insideTopSpacing
                ? `margin-top: ${r.outsideTopSpacing}px;
                   margin-bottom: ${r.outsideBottomSpacing}px;
                   padding-top: ${r.insideTopSpacing}px;
                   padding-bottom: ${r.insideBottomSpacing}px;
                `
                : `margin: 20px 0;
                   padding: 30px;`
            }
            border-radius: ${r.borderRadius}px;
            border: ${r.borderColor} solid ${r.borderSize}px;
            text-align: center;
            flex:auto;
            align-items: center;
        }

        .countdown_timer_wrapper_${t.id}.clickable {
          cursor: pointer;
        }
    
        .countdown_timer_wrapper_${t.id} h2 {
            ${n(r)}font-weight: bold;
            font-size: ${r.titleSize}px;
            color: ${r.titleColor};
            margin: 0;
            padding: 0;
            line-height: 1.2;
            letter-spacing: normal;
            text-transform: none;
        }
    
        .countdown_timer_subheading_${t.id} {
            ${n(r)}font-size: ${r.subheadingSize}px;
            color: ${r.subheadingColor};
            line-height: 1.2;
            letter-spacing: normal;
            padding: 0;
            padding-top: 2px;
            margin: 0;
        }

        .countdown_timer_bar_cta_${t.id}, .countdown_timer_bar_cta_${
        t.id
      }:visited {
          display: block;        
          cursor: pointer;
          text-decoration: none;
          background: ${r.buttonBackgroundColor};
          border: 0;
          white-space: nowrap;
          padding: 8px 16px;
          line-height: 1.5;
          border-radius: ${r.buttonBorderRadius}px;
          font-size: ${r.buttonFontSize}px;
          color: ${r.buttonFontColor};
          margin-top: 16px;
        }
    
        ${o(t, 'product-page')}
    `;
    e(a);
  }
  function i(e) {
    return 1 === e.toString().length ? `0${e}` : e;
  }
  function a(e, t, n, o = null) {
    let r,
      a = new Date(e + 6e4 * n.fixedMinutes),
      l = new Date().getTime();
    if ('toDate' === n.timerType) r = new Date(n.endDate) - l;
    else if ('recurring' === n.timerType) {
      let c = new Date(n.endDate) - l;
      if ('never' !== n.endType && c < 0) r = c;
      else {
        let d = h(n.startDate),
          s = h(n.endDate);
        r =
          d < s
            ? s - l
            : s.getTime() > l
            ? s - l
            : d.getTime() > l
            ? 0
            : s.getTime() + 864e5 - l;
      }
    } else {
      r = t ? a - (6e4 * n.fixedMinutes - t) - l : a - l;
      try {
        'cart-page' === n.type && o.item_count > 0
          ? window.localStorage.setItem(
              `essentialCountdownTimer-${n.id}`,
              JSON.stringify({
                id: n.id,
                userDistance: r,
                sessionCurrentDate: new Date().getTime(),
                updatedAt: n.updatedAt,
              })
            )
          : window.localStorage.setItem(
              `essentialCountdownTimer-${n.id}`,
              `${r}, ${new Date().getTime()}, ${n.timerType}-${
                n.fixedMinutes
              }-${n.id}`
            );
      } catch (p) {
        console.log(p);
      }
    }
    if (r < 0) {
      if ('custom-title' === n.onceItEnds) {
        var u;
        let m, g;
        'product-page' === (u = n).type || 'landing-page' === u.type
          ? ((m = document.querySelector(
              `.countdown_timer_wrapper_${u.id} h2`
            )),
            (g = document.querySelector(`.countdown_timer_subheading_${u.id}`)))
          : ((m = document.querySelector(
              `.countdown_annoucement_bar_title_${u.id}`
            )),
            (g = document.querySelector(
              `.countdown_annoucement_bar_subheading_${u.id}`
            ))),
          g && g.remove(),
          m && (m.textContent = u.customTitle);
      }
      if (
        'hide' === n.onceItEnds ||
        '' === n.onceItEnds ||
        'delete-items' === n.onceItEnds
      ) {
        let $;
        ($ =
          'product-page' === n.type
            ? document.querySelector(`.countdown_timer_wrapper_${n.id}`)
            : 'cart-page' === n.type
            ? document.querySelector(
                `.countdown_cart_page_timer_wrapper_${n.id}`
              )
            : document.querySelector(
                `.countdown_annoucement_bar_wrapper_${n.id}`
              )) && $.remove();
      }
      'delete-items' === n.onceItEnds &&
        'cart-page' === n.type &&
        o.item_count > 0 &&
        clearCartEssentialApps(n);
      return;
    }
    let f = Math.floor(r / 864e5);
    f = i(f);
    let w = Math.floor((r % 864e5) / 36e5);
    w = i(w);
    let b = Math.floor((r % 36e5) / 6e4);
    b = i(b);
    let y = Math.floor((r % 6e4) / 1e3);
    return (y = i(y)), { days: f, hours: w, minutes: b, seconds: y };
  }
  function l(e, n) {
    let o = Number(new Date().getTime()),
      r,
      i,
      l,
      d;
    try {
      l = window.localStorage.getItem(`essentialCountdownTimer-${n.id}`);
    } catch (s) {
      console.log(s);
    }
    l &&
      (([r, i, d] = l && l.split(',')),
      -1 === d.indexOf(`${n.timerType}-${n.fixedMinutes}-${n.id}`) &&
        ((l = null), (r = null))),
      l && parseInt(i) + 6e4 * n.fixedMinutes > o && (o = parseInt(i)),
      c(a(o, r, n), e, n),
      setTimeout(() => {
        t();
      }, 700);
    let p = setInterval(() => {
      let t = a(o, r, n);
      (n.repeat || 'repeat' === n.onceItEnds) &&
      'fixedMinutes' === n.timerType &&
      !t
        ? ((r = 0), (o = Number(new Date().getTime())))
        : t || clearInterval(p),
        c(a(o, r, n), e, n);
    }, 1e3);
  }
  function c(e, t, n) {
    let o = document.createElement('div');
    (o.className = `countdown_wrapper_${n.id} essential_countdown_timer`),
      e || (e = { days: '00', hours: '00', minutes: '00', seconds: '00' }),
      Object.values(e).forEach((e, t) => {
        let r = document.createElement('span');
        (r.className = `countdown_time_${n.id}`), (r.textContent = e);
        let i = r.cloneNode(!0);
        (i.textContent = ':'), o.append(r), 3 !== t && o.append(i);
      }),
      (t.innerHTML = ''),
      (function e(t, n, o) {
        let r = [
          o.legendCopyDays,
          o.legendCopyHours,
          o.legendCopyMins,
          o.legendCopySecs,
        ];
        r.forEach((e, n) => {
          let r = document.createElement('div');
          (r.className = `countdown_legend_${o.id}`),
            3 === n && (r.className = `countdown_legend_${o.id} last`),
            (r.textContent = e),
            t.append(r);
        }),
          n.append(t);
      })(o, t, n),
      t.append(o);
  }
  function d(e, t, n) {
    let o = document.createElement('h2'),
      r = document.createElement('span');
    var i,
      a,
      l = '{timer}';
    e || (e = { days: '00', hours: '00', minutes: '00', seconds: '00' }),
      Object.values(e).forEach((e, t) => {
        if ((0 === t && '00' === e) || (1 === t && '00' === e)) return;
        let o = document.createElement('span');
        (o.className = `countdown_time_${n.id}`), (o.textContent = e);
        let i = o.cloneNode(!0);
        (i.textContent = ':'), r.append(o), 3 !== t && r.append(i);
      }),
      (t.innerHTML = ''),
      (o.innerHTML += ((i = n.title), (a = r), i.replace(l, a.outerHTML))),
      t.append(o);
  }
  async function s(e, t) {
    if (e.productTags && e.productTags.length > 0) {
      let n = !1;
      try {
        let o = await getProductEssentialApps(),
          i = o.tags || [];
        n = e.productTags.some((e) => i.includes(e));
      } catch (a) {
        console.log(a);
      }
      if (!n) return !1;
    }
    let c = document.querySelector(`.countdown_timer_wrapper_${e.id}`);
    if (c) return;
    let d = document.createElement('div');
    d.className = `countdown_timer_wrapper_${e.id}`;
    let s = document.createElement('h2');
    s.textContent += e.title;
    let p = document.createElement('p');
    (p.className = `countdown_timer_subheading_${e.id}`),
      (p.textContent += e.subheading);
    let u = document.createElement('div');
    d.append(s), d.append(p), d.append(u), r(e), t.append(d), l(u, e);
  }
  function p(e, t, n = !0) {
    let o = document.createElement('div');
    o.className = `countdown_timer_wrapper_${e.id}`;
    let i = document.createElement('h2');
    i.textContent += e.title;
    let a = document.createElement('p');
    (a.className = `countdown_timer_subheading_${e.id}`),
      (a.textContent += e.subheading);
    let c = document.createElement('div');
    'clickable' === e.CTAType &&
      e.CTALink &&
      ((o.className += ' clickable'),
      o.setAttribute(
        'onclick',
        `essentialCountdownCloseAnnouncementBarOnClick(event, "${e.CTALink}")`
      ));
    let d = document.createElement('a');
    (d.className = `countdown_timer_bar_cta_${e.id}`),
      d.setAttribute('href', e.CTALink),
      (d.textContent += e.buttonText),
      o.append(i),
      o.append(a),
      o.append(c),
      'button' === e.CTAType && o.append(d),
      r(e),
      n ? t.append(o) : t.prepend(o),
      l(c, e);
  }
  async function u(o, r, i) {
    let l = await getCartEssentialApps();
    if (l && l.item_count < 1) {
      try {
        window.localStorage.removeItem(`essentialCountdownTimer-${o.id}`);
      } catch (c) {
        console.log(c);
      }
      if (!i) return;
    }
    let s = document.querySelector('.essential_countdown_cart_page_timer');
    if (s) return;
    let p = document.createElement('div');
    p.className = `essential_countdown_cart_page_timer countdown_cart_page_timer_wrapper_${o.id} essential_countdown_timer`;
    let u = document.createElement('div');
    p.append(u),
      r && r.prepend(p),
      (function t(o) {
        let r = o.style,
          i =
            'gradientBackground' === r.backgroundType
              ? `linear-gradient(${r.gradientTurn}deg, ${r.gradientStart}, ${r.gradientEnd})`
              : r.singleColor,
          a = `
        .countdown_cart_page_timer_wrapper_${o.id} {
            ${n(r)}background: ${i};
            margin-top: ${r.outsideTopSpacing}px;
                margin-bottom: ${r.outsideBottomSpacing}px;
                padding-top: ${r.insideTopSpacing}px;
                padding-bottom: ${r.insideBottomSpacing}px;
                padding-left: 10px;
                padding-right: 10px;
              
            border-radius: ${r.borderRadius}px;
            border: ${r.borderColor} solid ${r.borderSize}px;
            text-align: center;
            flex:auto;
            align-items: center;
        }
    
        .countdown_cart_page_timer_wrapper_${o.id} h2 {
          ${n(r)}font-weight: bold;
          font-size: ${r.titleSize}px;
          color: ${r.titleColor};
          margin: 0;
          padding: 0;
          line-height: 1.2;
          letter-spacing: normal;
          text-transform: none;
          white-space: break-spaces;
        }
    
        .countdown_wrapper_${o.id} {
          white-space: nowrap;
        }

        .countdown_time_${o.id} {
          ${n(r)}color: ${r.timerColor};
          font-weight: bold;
          font-size: ${r.timerSize}px;
          line-height: 1;
          font-feature-settings: 'tnum';
          font-variant-numeric: tabular-nums;
        }`;
        e(a);
      })(o),
      (function e(t, n, o) {
        let r = Number(new Date().getTime()),
          i,
          l = {};
        try {
          i = window.localStorage.getItem(`essentialCountdownTimer-${n.id}`);
        } catch (c) {
          console.log(c);
        }
        if (i) {
          try {
            let s = JSON.parse(i);
            l = { ...l, ...s };
          } catch (p) {
            console.log(p);
          }
          l &&
            l.id === n.id &&
            l.updatedAt !== n.updatedAt &&
            (window.localStorage.removeItem(`essentialCountdownTimer-${n.id}`),
            (i = null),
            (l = { ...l, userDistance: null }));
        }
        i &&
          parseInt(l.sessionCurrentDate) + 6e4 * n.fixedMinutes > r &&
          (r = parseInt(l.sessionCurrentDate)),
          d(a(r, l.userDistance, n, o), t, n);
        let u = setInterval(() => {
          let e = a(r, l.userDistance, n, o);
          (n.repeat || 'repeat' === n.onceItEnds) &&
          'fixedMinutes' === n.timerType &&
          !e
            ? ((l = { ...l, userDistance: 0 }),
              (r = Number(new Date().getTime())))
            : e || clearInterval(u),
            d(a(r, l.userDistance, n, o), t, n);
        }, 1e3);
      })(u, o, l),
      setTimeout(() => {
        t();
      }, 700);
  }
  function m() {
    let e,
      t = document.querySelector('form[action="/cart"]'),
      n = document.querySelectorAll('.side-cart'),
      o = document.querySelector('.countdown-timer-side-cart');
    return (
      t && 'cart-notification-form' === t.getAttribute('id') && (t = null),
      o ? (e = o) : t ? (e = t) : n.length > 0 && (e = n[n.length - 1]),
      e
    );
  }
  function g(e) {
    if (e.startDate && 'fixedMinutes' !== e.timerType) {
      let t = Number(new Date().getTime()),
        n = Number(h(e.startDate).getTime()),
        o = Number(h(e.endDate).getTime()),
        r =
          $(e) && 'today' === e.startType
            ? n
            : Number(new Date(e.startDate).getTime());
      return (!$(e) || 'today' !== e.startType || !(n > o)) && !(t >= r);
    }
    return !1;
  }
  function $(e) {
    return 'recurring' === e.timerType;
  }
  function f(e) {
    if ('do-nothing' === e.onceItEnds || 'custom-title' === e.onceItEnds)
      return !0;
    let t = Number(new Date().getTime()),
      n = Number(h(e.startDate).getTime()),
      o = Number(h(e.endDate).getTime());
    return n < o ? n < t && t < o : n < t && t < o + 864e5;
  }
  function w(e) {
    let t = new Date().getDay();
    return (
      !e.recurringDays ||
      !(e.recurringDays.length > 0) ||
      e.recurringDays.includes(t)
    );
  }
  function h(e) {
    let t = new Date(),
      n = new Date(e).getHours(),
      o = new Date(e).getMinutes(),
      r = new Date(e).getSeconds();
    return t.setHours(n), t.setMinutes(o), t.setSeconds(r), t;
  }
  !(function t() {
    let r,
      i = window.location && window.location.pathname.includes('/products/'),
      a = window.location && window.location.pathname.includes('/collections/'),
      c = window.location && window.location.pathname.includes('/password'),
      d = window.location && window.location.pathname.includes('/cart'),
      h = document.querySelectorAll('form[action="/cart/add"]'),
      b = document.querySelector('#MainContent'),
      y = document.querySelector('main'),
      x = document.querySelector('form#contact_form'),
      C = document.querySelector('.essential-countdown-timer-placement'),
      T = b || y;
    if (h && 0 === h.length) {
      let S = document.querySelectorAll('form[action]');
      h = Array.from(S).filter((e) =>
        e.getAttribute('action').includes('/cart/add')
      );
    }
    if (d) {
      let _ = document.querySelectorAll('form[action="/cart"]'),
        A = _[_.length - 1];
      A && (r = A.parentNode);
    }
    let E = document.querySelectorAll('div.countdown-timer-block'),
      k = [],
      v = (e, t, n) => {
        if (e.type !== t || (n && 'custom' === e.timerPlacement)) return !1;
        if (e.showOnProducts && 0 !== e.showOnProducts.length) {
          let o = decodeURI(window.location.pathname),
            r = window.meta && window.meta.product,
            i = e.showOnProducts.find((e) =>
              r && r.gid
                ? r.gid === e.id
                : 'function' == typeof o.endsWith
                ? o.endsWith(`products/${e.handle}`)
                : o.includes(`products/${e.handle}`)
            );
          if (!i) return !1;
        }
        return !(g(e) || ($(e) && !w(e)) || ($(e) && !f(e)));
      },
      N = (e, t, n) => {
        if (
          e.type !== t ||
          (n && 'custom' === e.timerPlacement) ||
          (n && 'password-page' === e.timerPlacement)
        )
          return !1;
        if (e.showOnCollections && 0 !== e.showOnCollections.length) {
          let o = decodeURI(window.location.pathname),
            r = e.showOnCollections.find((e) =>
              o.includes(`collections/${e.handle}`)
            );
          if (!r) return !1;
        }
        return !(g(e) || ($(e) && !w(e)) || ($(e) && !f(e)));
      },
      q = (e, t, n) =>
        !(
          e.type !== t ||
          (n && '' === e.timerPlacement) ||
          (e.timerPlacement && 'password-page' !== e.timerPlacement) ||
          g(e) ||
          ($(e) && !w(e)) ||
          ($(e) && !f(e))
        ),
      z = (e, t, n) => e.type === t && (!n || 'custom' !== e.timerPlacement);
    E &&
      E.length > 0 &&
      (k = Array.from(E).filter(
        (e) => e && '' !== e.getAttribute('countdown-timer-id')
      )),
      (function e() {
        let t = window.Shopify ? window.Shopify.shop : window.location.origin,
          n = `https://cache-essential-apps.cc/config/${t}`;
        return fetch(n).then((e) => e.json());
      })().then((t) => {
        if (t && !Array.isArray(t) && 0 === t.length) return null;
        let g = t.filter((e) => 'top-bar' === e.type),
          $ = t.find((e) => 'cart-page' === e.type);
        if (
          (g.forEach((t) => {
            t &&
              v(t, 'top-bar') &&
              N(t, 'top-bar') &&
              (function t(r) {
                let i = document.querySelector(
                  '.essential_countdown_annoucement_bar_wrapper'
                );
                if (i) return;
                if (r.timerPlacement) {
                  let a = window.location.pathname;
                  if (
                    ('home-page' === r.timerPlacement && '/' !== a) ||
                    ('all-products' === r.timerPlacement &&
                      !window.location.pathname.includes('/products/')) ||
                    ('all-collections' === r.timerPlacement &&
                      !window.location.pathname.includes('/collections/'))
                  )
                    return;
                }
                let c = document.createElement('div');
                c.className = `essential_countdown_annoucement_bar_wrapper countdown_annoucement_bar_wrapper_${r.id}`;
                try {
                  let d = window.localStorage.getItem(
                    'countdownTimerAnnoucementBarClosed'
                  );
                  if (
                    (d = JSON.parse(d)) &&
                    d.id === r.id &&
                    d.updatedAt === r.updatedAt &&
                    d.value
                  )
                    return;
                } catch (s) {
                  console.log(s);
                }
                'top-page' === r.style.position &&
                  r.style.stickyBar &&
                  (c.className += ' top_page'),
                  'bottom-page' === r.style.position &&
                    (c.className += ' bottom_page'),
                  'clickable' === r.CTAType &&
                    r.CTALink &&
                    ((c.className += ' clickable'),
                    c.setAttribute(
                      'onclick',
                      `essentialCountdownCloseAnnouncementBarOnClick(event, "${r.CTALink}")`
                    ));
                let p = document.createElement('p');
                (p.className += `countdown_annoucement_bar_title_${r.id} h2`),
                  (p.textContent += r.title);
                let u = document.createElement('p');
                (u.className = `countdown_annoucement_bar_subheading_${r.id}`),
                  (u.textContent += r.subheading);
                let m = document.createElement('div');
                m.append(p), m.append(u);
                let g = document.createElement('div'),
                  $ = document.createElement('a');
                ($.className = `countdown_annoucement_bar_cta_${r.id}`),
                  $.setAttribute('href', r.CTALink),
                  ($.textContent += r.buttonText);
                let f = document.createElement('button');
                (f.className = `countdown_annoucement_bar_close_button_${r.id}`),
                  f.setAttribute(
                    'onclick',
                    `essentialCountdownCloseAnnouncementBar("${r.id}", "${r.updatedAt}")`
                  ),
                  f.append(
                    (function e(t) {
                      let n = document.createElementNS(
                          'http://www.w3.org/2000/svg',
                          'svg'
                        ),
                        o = document.createElementNS(
                          'http://www.w3.org/2000/svg',
                          'path'
                        );
                      return (
                        n.setAttribute('width', 12),
                        n.setAttribute('height', 12),
                        n.setAttribute('fill', 'none'),
                        o.setAttribute(
                          'd',
                          'm7.414 6 4.293-4.293A.999.999 0 1 0 10.293.293L6 4.586 1.707.293A.999.999 0 1 0 .293 1.707L4.586 6 .293 10.293a.999.999 0 1 0 1.414 1.414L6 7.414l4.293 4.293a.997.997 0 0 0 1.414 0 .999.999 0 0 0 0-1.414L7.414 6Z'
                        ),
                        o.setAttribute('fill', t),
                        n.append(o),
                        n
                      );
                    })(r.style.closeIconColor)
                  ),
                  c.append(m),
                  c.append(g),
                  'button' === r.CTAType && c.append($),
                  r.closeButton && c.append(f),
                  (function t(r) {
                    let i = r.style,
                      a =
                        'gradientBackground' === i.backgroundType
                          ? `linear-gradient(${i.gradientTurn}deg, ${i.gradientStart}, ${i.gradientEnd})`
                          : i.singleColor,
                      l = `
        .countdown_annoucement_bar_wrapper_${r.id} {
          position: relative;
          ${n(i)}background: ${a};
          z-index: 100;
          display: flex !important;
          width: 100%;
          flex-wrap: wrap;
          ${
            'seperate-centered' === i.announcementBarStyle
              ? `flex-flow: column;
              justify-items: center;`
              : ''
          }

          align-items: center;
          justify-content: center;
          padding: 10px;
          column-gap: 26px;
          row-gap: 10px;
          border-bottom: ${i.borderColor} solid ${i.borderSize}px;
        }

        .countdown_annoucement_bar_wrapper_${r.id}.top_page {
          position: sticky; 
          top: 0;
        }

        .countdown_annoucement_bar_wrapper_${r.id}.bottom_page {
          bottom: 0; 
          left: 0;
          position: fixed;
          width: 100%;
          border-bottom: none;
          border-top: ${i.borderColor} solid ${i.borderSize}px;
        }
        
        .countdown_annoucement_bar_wrapper_${r.id}.clickable {
          cursor: pointer;
        }
    
        .countdown_annoucement_bar_title_${r.id}.h2 {
            ${n(i)}font-weight: bold;
            font-size: ${i.titleSize}px;
            color: ${i.titleColor};
            margin: 0;
            padding: 0;
            line-height: 1.2;
            letter-spacing: normal;
            text-transform: none;
            text-align: left;
        }
    
        .countdown_annoucement_bar_subheading_${r.id} {
            ${n(i)}font-size: ${i.subheadingSize}px;
            color: ${i.subheadingColor};
            line-height: 1.2;
            letter-spacing: normal;
            padding: 0;
            margin: 0;
        }
        
        .countdown_annoucement_bar_cta_${
          r.id
        }, .countdown_annoucement_bar_cta_${r.id}:visited  {
          display: block;        
          cursor: pointer;
          text-decoration: none;
          background: ${i.buttonBackgroundColor};
          border: 0;
          white-space: nowrap;
          padding: 8px 16px;
          line-height: 1.5;
          border-radius: ${i.buttonBorderRadius}px;
          font-size: ${i.buttonFontSize}px;
          color: ${i.buttonFontColor};
        }

        .countdown_annoucement_bar_close_button_${r.id} {
          position: absolute;
          display: block;
          border: none;
          background: none;
          padding: 6px;
          cursor: pointer;
          top: 50%;
          right: 10px;
          transform: translate(0, -50%);
        }

        .countdown_annoucement_bar_close_button_${r.id} svg {
          width: 12px;
          height: 12px;
          display: block;
        }

        .countdown_annoucement_bar_close_button_${r.id}.top_right {
          position: absolute;
          top: 20px;
          right: 20px;
        }

        @media (max-width: 430px) {
          .countdown_annoucement_bar_wrapper_${r.id} {
            justify-items: center;
            text-align: center;
            padding: 10px 15px;
          }

          .countdown_annoucement_bar_close_button_${r.id} {
            position: absolute;
            padding: 0;
            transform: none;
            top: 5px;
            right: 5px;
          }

          .countdown_annoucement_bar_title_${r.id}.h2 {
              text-align: center;
          }
        }

        ${o(r, 'top-bar')}
    `;
                    e(l);
                  })(r);
                let w = document.querySelector('.essential-countdown-top-bar');
                w ? w.append(c) : document.querySelector('body').prepend(c),
                  l(g, r);
              })(t);
          }),
          k.forEach((e) => {
            let n = e.getAttribute('countdown-timer-id'),
              o = t.find((e) => e.id === n);
            o && v(o, 'product-page') && s(o, e),
              o && N(o, 'landing-page') && p(o, e),
              o && 'cart-page' === o.type && u(o, e);
          }),
          0 === k.length && i && ((h && h.length > 0) || C))
        ) {
          let f, w;
          (w = C || h[h.length - 1]),
            (f = t.find((e) => v(e, 'product-page', !0))) && s(f, w);
        }
        if (0 === k.length && a && T) {
          let b;
          (b = t.find((e) => N(e, 'landing-page', !0))) && p(b, T, !1);
        }
        if (0 === k.length && c && x) {
          let y;
          (y = t.find((e) => q(e, 'landing-page', !0))) && p(y, x);
        }
        if (0 === k.length && d) {
          let S = t.find((e) => z(e, 'cart-page', !0));
          r && S && u(S, r);
        }
        if (m() && $ && !d) {
          let _ = m();
          if (_ && 'custom' !== $.timerPlacement) {
            u($, _, !0);
            let A = new MutationObserver(() => {
              let e = document.querySelector(
                `.countdown_cart_page_timer_wrapper_${$.id}`
              );
              !e && m() && u($, m(), !0);
            });
            !window.sideCartObserver &&
              _ &&
              (A.observe(_.parentNode.parentNode.parentNode.parentNode, {
                childList: !0,
                subtree: !0,
              }),
              (window.sideCartObserver = !0));
          }
        }
        if (!m() && !d && $)
          try {
            (timerSession = window.localStorage.getItem(
              `essentialCountdownTimer-${$.id}`
            )) && u($, !1);
          } catch (E) {
            console.log(E);
          }
      });
  })();
})();
